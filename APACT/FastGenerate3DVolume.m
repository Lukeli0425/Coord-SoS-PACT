function [ImageVolume, FTVolume] = FastGenerate3DVolume...
(Sinogram, R_ring, T_sample, V_sound, ImageX, ImageY, DelayDistance, FFT_half_N)
% DESCRIPTION:
%     Generate a series of 2D Delay And Sum reconstructed PACT images,
%     by assigning delay distances to all the transducers. 
%
% INPUTS:
%     Sinogram        - A 2D matrix and each column of it is the signal
%                     recievde by one transducer. The nummber of
%                     transducers should be the number of columns. The
%                     transducers should be evenly distributed on a circle
%                     in counterclockwise arrangement and the first column
%                     correspond to the transducer in the dirrection 1 *
%                     2pi/N in the first quartile. The first sample should
%                     be at time 0 when the photoacoustic effect happens.
%     R_ring          - The radius [m] of the ring transducer array.
%     T_sample        - Sample time interval of the signals [s].
%     V_sound         - The sound speed [m/s] used for Delay And Sum 
%                     reconstruction.
%     ImageX          - The vector [m] defining the x coordinates of the
%                     grid points on which the reconstruction is done. The
%                     values in the vector should be unifromly-spaced in
%                     ascending order. The origin of the cartesian
%                     coordinate system is the center of the ring array.
%     ImageY          - The vector [m] defining the y coordinates of the
%                     grid points on which the reconstruction is done. The
%                     values in the vector should be unifromly-spaced in
%                     ascending order.
%     DelayDistance   - The vector [m] contains all the delay distances
%                     to be assigned to the transducers. The values in the
%                     vector should be unifromly-spaced in ascending order.
%     FFT_half_N      - The number of points in 2D Fast Fourier Transform
%                     is 2*FFT_hlaf_N which should be at least greater than
%                     the length of ImageX and ImageY.
%
% OUTPUTS:
%     ImageVolume     - A 3D matrix. ImageVolume(:, :, d) stands for the
%                     Delay And Sum reconstructed image when assigning a
%                     delay distance of DelayDistance(d) to all the
%                     transducers.
%     FTVolume        - FTVolume(:, :, d) is the 2D Fast Fourier
%                     Transformation of ImageVolume(:, :, d). Gaussian
%                     window generated by gausswin(length(ImageY)) *
%                     (gausswin(length(ImageX)))' is applied before the
%                     transform.
% ABOUT:
%     author          - Manxiu Cui
%     last update     - 25th September 2019
%
% This function is part of the Local Fourier Domain Photoacoustic
% Tomography Wavefront Correction Project 
%
% Copyright (C) 2019 Caltech Visiting Undergraduate Research Program 
% Manxiu Cui, Tsinghua University, Department of EE


    N_transducer = size(Sinogram, 2);
    ImageVolume   = zeros(length(ImageY), length(ImageX), length(DelayDistance));
    FTVolume = zeros(FFT_half_N * 2, FFT_half_N * 2, length(DelayDistance));

    delta_angle = 2*pi/N_transducer;
    angle_transducer = delta_angle * (1:N_transducer);

    x_transducer = R_ring * cos(angle_transducer);
    y_transducer = R_ring * sin(angle_transducer);

    related_data = zeros(1, N_transducer);

    for s = 1:length(ImageX)
        %['Function FastGenerate3DVolume is Generating ImageVoume ', num2str(100 * s / length(ImageX)), '%']
        for t = 1:length(ImageY)
            distance_to_transducer = sqrt((x_transducer - ImageX(s)).^2 + (y_transducer - ImageY(t)).^2);
            for r = 1:length(DelayDistance)
                for k = 1:N_transducer
                    id = round((distance_to_transducer(k) - DelayDistance(r))/(V_sound * T_sample));
                    if(id > size(Sinogram, 1) || id < 1)
                        related_data(k) = 0;
                    else
                        related_data(k) = Sinogram(id, k);
                    end
                end
                ImageVolume(t, s, r) = mean(related_data);
            end
        end
    end

    GaussWindow = gausswin(length(ImageY)) * (gausswin(length(ImageX)))';
    
    for r = 1:length(DelayDistance)
        FTVolume(:, :, r) = Myfft(ImageVolume(:, :, r).* GaussWindow, FFT_half_N);
    end
end

